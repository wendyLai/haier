{"version":3,"sources":["ember-cli-app-version/components/app-version.js","ember-cli-app-version/initializer-factory.js","ember-cli-app-version/templates/app-version.js","ember-cli-app-version.js","ember-cli-content-security-policy.js","ember-cli-password-toggle/components/password-toggle.js","ember-cli-password-toggle.js","ivy-tabs/components/ivy-tab-list.js","ivy-tabs/components/ivy-tab-panel.js","ivy-tabs/components/ivy-tab.js","ivy-tabs/components/ivy-tabs.js","ivy-tabs/index.js","ivy-tabs.js","semantic-ui-ember/components/ui-accordion.js","semantic-ui-ember/components/ui-checkbox.js","semantic-ui-ember/components/ui-dropdown-item.js","semantic-ui-ember/components/ui-dropdown.js","semantic-ui-ember/components/ui-embed.js","semantic-ui-ember/components/ui-modal.js","semantic-ui-ember/components/ui-nag.js","semantic-ui-ember/components/ui-popup.js","semantic-ui-ember/components/ui-progress.js","semantic-ui-ember/components/ui-radio.js","semantic-ui-ember/components/ui-rating.js","semantic-ui-ember/components/ui-search.js","semantic-ui-ember/components/ui-shape.js","semantic-ui-ember/components/ui-sidebar.js","semantic-ui-ember/components/ui-sticky.js","semantic-ui-ember/mixins/base.js","semantic-ui-ember/mixins/checkbox-mixin.js","semantic-ui-ember/mixins/data-attributes.js","semantic-ui-ember/semantic.js","semantic-ui-ember.js"],"sourcesContent":["define('ember-cli-app-version/components/app-version', ['exports', 'ember', 'ember-cli-app-version/templates/app-version'], function (exports, _ember, _emberCliAppVersionTemplatesAppVersion) {\n  'use strict';\n\n  exports['default'] = _ember['default'].Component.extend({\n    tagName: 'span',\n    layout: _emberCliAppVersionTemplatesAppVersion['default']\n  });\n});","define('ember-cli-app-version/initializer-factory', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  exports['default'] = initializerFactory;\n\n  var classify = _ember['default'].String.classify;\n\n  function initializerFactory(name, version) {\n    var registered = false;\n\n    return function () {\n      if (!registered && name && version) {\n        var appName = classify(name);\n        _ember['default'].libraries.register(appName, version);\n        registered = true;\n      }\n    };\n  }\n});","define(\"ember-cli-app-version/templates/app-version\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.11\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"modules/ember-cli-app-version/templates/app-version.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [[\"content\", \"version\", [\"loc\", [null, [1, 0], [1, 11]]]]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","define('ember-cli-app-version', ['ember-cli-app-version/index', 'ember', 'exports'], function(__index__, __Ember__, __exports__) {\n  'use strict';\n  var keys = Object.keys || __Ember__['default'].keys;\n  var forEach = Array.prototype.forEach && function(array, cb) {\n    array.forEach(cb);\n  } || __Ember__['default'].EnumerableUtils.forEach;\n\n  forEach(keys(__index__), (function(key) {\n    __exports__[key] = __index__[key];\n  }));\n});\n","define('ember-cli-content-security-policy', ['ember-cli-content-security-policy/index', 'ember', 'exports'], function(__index__, __Ember__, __exports__) {\n  'use strict';\n  var keys = Object.keys || __Ember__['default'].keys;\n  var forEach = Array.prototype.forEach && function(array, cb) {\n    array.forEach(cb);\n  } || __Ember__['default'].EnumerableUtils.forEach;\n\n  forEach(keys(__index__), (function(key) {\n    __exports__[key] = __index__[key];\n  }));\n});\n","define('ember-cli-password-toggle/components/password-toggle', ['exports', 'ember'], function (exports, _ember) {\n    'use strict';\n\n    var $ = _ember['default'].$;\n\n    exports['default'] = _ember['default'].Component.extend({\n        didInsertElement: function didInsertElement() {\n            this.$('button').on('click', function () {\n                var text = $(this).text();\n                var $input = $(this).parent().find('input');\n\n                if (text === 'Show') {\n                    $(this).text('Hide');\n                    $input.attr('type', 'text');\n                } else if (text === 'Hide') {\n                    $(this).text('Show');\n                    $input.attr('type', 'password');\n                }\n            });\n            if (this.get('focus')) {\n                this.$('input').focus();\n            }\n        },\n        keyPress: function keyPress(event) {\n            if (event.keyCode === 13) {\n                this.sendAction(\"action\");\n            }\n        },\n        wrapperClazz: _ember['default'].computed(function () {\n            return 'ember-password-toggle-wrapper ' + this.get('wrapperClass');\n        }),\n        buttonClazz: _ember['default'].computed(function () {\n            return 'ember-password-toggle-btn ' + this.get('buttonClass');\n        }),\n        inputClazz: _ember['default'].computed(function () {\n            return 'ember-password-toggle-input ' + this.get('inputClass');\n        })\n    });\n});","define('ember-cli-password-toggle', ['ember-cli-password-toggle/index', 'ember', 'exports'], function(__index__, __Ember__, __exports__) {\n  'use strict';\n  var keys = Object.keys || __Ember__['default'].keys;\n  var forEach = Array.prototype.forEach && function(array, cb) {\n    array.forEach(cb);\n  } || __Ember__['default'].EnumerableUtils.forEach;\n\n  forEach(keys(__index__), (function(key) {\n    __exports__[key] = __index__[key];\n  }));\n});\n","define('ivy-tabs/components/ivy-tab-list', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  /**\n   * @module ivy-tabs\n   */\n\n  /**\n   * @class IvyTabListComponent\n   * @namespace IvyTabs\n   * @extends Ember.Component\n   */\n  exports['default'] = _ember['default'].Component.extend({\n    tagName: 'ul',\n    attributeBindings: ['aria-multiselectable', 'role'],\n    classNames: ['ivy-tab-list'],\n\n    init: function init() {\n      this._super();\n      _ember['default'].run.once(this, this._registerWithTabsContainer);\n    },\n\n    willDestroy: function willDestroy() {\n      this._super();\n      _ember['default'].run.once(this, this._unregisterWithTabsContainer);\n    },\n\n    /**\n     * Tells screenreaders that only one tab can be selected at a time.\n     *\n     * @property aria-multiselectable\n     * @type String\n     * @default 'false'\n     */\n    'aria-multiselectable': 'false',\n\n    /**\n     * The `role` attribute of the tab list element.\n     *\n     * See http://www.w3.org/TR/wai-aria/roles#tablist\n     *\n     * @property role\n     * @type String\n     * @default 'tablist'\n     */\n    role: 'tablist',\n\n    /**\n     * Gives focus to the selected tab.\n     *\n     * @method focusSelectedTab\n     */\n    focusSelectedTab: function focusSelectedTab() {\n      this.get('selectedTab').$().focus();\n    },\n\n    /**\n     * Event handler for navigating tabs via arrow keys. The left (or up) arrow\n     * selects the previous tab, while the right (or down) arrow selects the next\n     * tab.\n     *\n     * @method navigateOnKeyDown\n     * @param {Event} event\n     */\n    navigateOnKeyDown: _ember['default'].on('keyDown', function (event) {\n      switch (event.keyCode) {\n        case 37: /* left */\n        case 38:\n          /* up */\n          this.selectPreviousTab();\n          break;\n        case 39: /* right */\n        case 40:\n          /* down */\n          this.selectNextTab();\n          break;\n        default:\n          return;\n      }\n\n      event.preventDefault();\n      _ember['default'].run.scheduleOnce('afterRender', this, this.focusSelectedTab);\n    }),\n\n    /**\n     * Adds a tab to the `tabs` array.\n     *\n     * @method registerTab\n     * @param {IvyTabs.IvyTabComponent} tab\n     */\n    registerTab: function registerTab(tab) {\n      this.get('tabs').pushObject(tab);\n    },\n\n    /**\n     * Selects the next tab in the list, if any.\n     *\n     * @method selectNextTab\n     */\n    selectNextTab: function selectNextTab() {\n      var index = this.get('selected-index') + 1;\n      if (index === this.get('tabs.length')) {\n        index = 0;\n      }\n      this.selectTabByIndex(index);\n    },\n\n    /**\n     * Selects the previous tab in the list, if any.\n     *\n     * @method selectPreviousTab\n     */\n    selectPreviousTab: function selectPreviousTab() {\n      var index = this.get('selected-index') - 1;\n\n      // Previous from the first tab should select the last tab.\n      if (index < 0) {\n        index = this.get('tabs.length') - 1;\n      }\n      // This would only happen if there are no tabs, so stay at 0.\n      if (index < 0) {\n        index = 0;\n      }\n\n      this.selectTabByIndex(index);\n    },\n\n    'selected-index': _ember['default'].computed.alias('tabsContainer.selected-index'),\n\n    /**\n     * The currently-selected `ivy-tab` instance.\n     *\n     * @property selectedTab\n     * @type IvyTabs.IvyTabComponent\n     */\n    selectedTab: _ember['default'].computed(function () {\n      return this.get('tabs').objectAt(this.get('selected-index'));\n    }).property('selected-index', 'tabs.[]'),\n\n    /**\n     * Select the given tab.\n     *\n     * @method selectTab\n     * @param {IvyTabs.IvyTabComponent} tab\n     */\n    selectTab: function selectTab(tab) {\n      this.selectTabByIndex(this.get('tabs').indexOf(tab));\n    },\n\n    /**\n     * Select the tab at `index`.\n     *\n     * @method selectTabByIndex\n     * @param {Number} index\n     */\n    selectTabByIndex: function selectTabByIndex(index) {\n      this.set('selected-index', index);\n    },\n\n    /**\n     * The `ivy-tabs` component.\n     *\n     * @property tabsContainer\n     * @type IvyTabs.IvyTabsComponent\n     * @readOnly\n     */\n    tabsContainer: _ember['default'].computed.alias('parentView').readOnly(),\n\n    /**\n     * Removes a tab from the `tabs` array.\n     *\n     * @method unregisterTab\n     * @param {IvyTabs.IvyTabComponent} tab\n     */\n    unregisterTab: function unregisterTab(tab) {\n      var index = tab.get('index');\n      this.get('tabs').removeObject(tab);\n\n      if (index < this.get('selected-index')) {\n        this.selectPreviousTab();\n      } else if (tab.get('isSelected')) {\n        if (index !== 0) {\n          this.selectPreviousTab();\n        }\n      }\n    },\n\n    _initTabs: _ember['default'].on('init', function () {\n      this.set('tabs', _ember['default'].A());\n    }),\n\n    _registerWithTabsContainer: function _registerWithTabsContainer() {\n      this.get('tabsContainer').registerTabList(this);\n    },\n\n    _unregisterWithTabsContainer: function _unregisterWithTabsContainer() {\n      this.get('tabsContainer').unregisterTabList(this);\n    }\n  });\n});","define('ivy-tabs/components/ivy-tab-panel', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  /**\n   * @module ivy-tabs\n   */\n\n  /**\n   * @class IvyTabPanelComponent\n   * @namespace IvyTabs\n   * @extends Ember.Component\n   */\n  exports['default'] = _ember['default'].Component.extend({\n    attributeBindings: ['aria-labelledby', 'role'],\n    classNames: ['ivy-tab-panel'],\n    classNameBindings: ['active'],\n\n    init: function init() {\n      this._super();\n      _ember['default'].run.once(this, this._registerWithTabsContainer);\n    },\n\n    willDestroy: function willDestroy() {\n      this._super();\n      _ember['default'].run.once(this, this._unregisterWithTabsContainer);\n    },\n\n    /**\n     * Tells screenreaders which tab labels this panel.\n     *\n     * See http://www.w3.org/TR/wai-aria/states_and_properties#aria-labelledby\n     *\n     * @property aria-labelledby\n     * @type String\n     * @readOnly\n     */\n    'aria-labelledby': _ember['default'].computed.alias('tab.elementId').readOnly(),\n\n    /**\n     * See http://www.w3.org/TR/wai-aria/roles#tabpanel\n     *\n     * @property role\n     * @type String\n     * @default 'tabpanel'\n     */\n    role: 'tabpanel',\n\n    /**\n     * Accessed as a className binding to apply the panel's `activeClass` CSS\n     * class to the element when the panel's `isSelected` property is true.\n     *\n     * @property active\n     * @type String\n     * @readOnly\n     */\n    active: _ember['default'].computed(function () {\n      if (this.get('isSelected')) {\n        return this.get('activeClass');\n      }\n    }).property('isSelected'),\n\n    /**\n     * The CSS class to apply to a panel's element when its `isSelected` property\n     * is `true`.\n     *\n     * @property activeClass\n     * @type String\n     * @default 'active'\n     */\n    activeClass: 'active',\n\n    /**\n     * The index of this panel in the `ivy-tabs` component.\n     *\n     * @property index\n     * @type Number\n     */\n    index: _ember['default'].computed(function () {\n      return this.get('tabPanels').indexOf(this);\n    }).property('tabPanels.[]'),\n\n    /**\n     * Whether or not this panel's associated tab is selected.\n     *\n     * @property isSelected\n     * @type Boolean\n     * @readOnly\n     */\n    isSelected: _ember['default'].computed.alias('tab.isSelected').readOnly(),\n\n    /**\n     * If `false`, this panel will appear hidden in the DOM. This is an alias to\n     * `isSelected`.\n     *\n     * @property isVisible\n     * @type Boolean\n     * @readOnly\n     */\n    isVisible: _ember['default'].computed.alias('isSelected').readOnly(),\n\n    /**\n     * The `ivy-tab` associated with this panel.\n     *\n     * @property tab\n     * @type IvyTabs.IvyTabComponent\n     */\n    tab: _ember['default'].computed(function () {\n      var tabs = this.get('tabs');\n      if (tabs) {\n        return tabs.objectAt(this.get('index'));\n      }\n    }).property('tabs.[]', 'index'),\n\n    /**\n     * The `ivy-tab-list` component this panel belongs to.\n     *\n     * @property tabList\n     * @type IvyTabs.IvyTabListComponent\n     * @readOnly\n     */\n    tabList: _ember['default'].computed.alias('tabsContainer.tabList').readOnly(),\n\n    /**\n     * The array of all `ivy-tab-panel` instances within the `ivy-tabs`\n     * component.\n     *\n     * @property tabPanels\n     * @type Array | IvyTabs.IvyTabPanelComponent\n     * @readOnly\n     */\n    tabPanels: _ember['default'].computed.alias('tabsContainer.tabPanels').readOnly(),\n\n    /**\n     * The array of all `ivy-tab` instances within the `ivy-tab-list` component.\n     *\n     * @property tabs\n     * @type Array | IvyTabs.IvyTabComponent\n     * @readOnly\n     */\n    tabs: _ember['default'].computed.alias('tabList.tabs').readOnly(),\n\n    /**\n     * The `ivy-tabs` component.\n     *\n     * @property tabsContainer\n     * @type IvyTabs.IvyTabsComponent\n     * @readOnly\n     */\n    tabsContainer: _ember['default'].computed.alias('parentView').readOnly(),\n\n    _registerWithTabsContainer: function _registerWithTabsContainer() {\n      this.get('tabsContainer').registerTabPanel(this);\n    },\n\n    _unregisterWithTabsContainer: function _unregisterWithTabsContainer() {\n      this.get('tabsContainer').unregisterTabPanel(this);\n    }\n  });\n});","define('ivy-tabs/components/ivy-tab', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  /**\n   * @module ivy-tabs\n   */\n\n  /**\n   * @class IvyTabComponent\n   * @namespace IvyTabs\n   * @extends Ember.Component\n   */\n  exports['default'] = _ember['default'].Component.extend({\n    tagName: 'li',\n    attributeBindings: ['aria-controls', 'aria-expanded', 'aria-selected', 'role', 'selected', 'tabindex'],\n    classNames: ['ivy-tab'],\n    classNameBindings: ['active'],\n\n    init: function init() {\n      this._super();\n      _ember['default'].run.once(this, this._registerWithTabList);\n    },\n\n    willDestroy: function willDestroy() {\n      this._super();\n      _ember['default'].run.once(this, this._unregisterWithTabList);\n    },\n\n    /**\n     * Tells screenreaders which panel this tab controls.\n     *\n     * See http://www.w3.org/TR/wai-aria/states_and_properties#aria-controls\n     *\n     * @property aria-controls\n     * @type String\n     * @readOnly\n     */\n    'aria-controls': _ember['default'].computed.alias('tabPanel.elementId').readOnly(),\n\n    /**\n     * Tells screenreaders whether or not this tab's panel is expanded.\n     *\n     * See http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded\n     *\n     * @property aria-expanded\n     * @type String\n     * @readOnly\n     */\n    'aria-expanded': _ember['default'].computed.alias('aria-selected').readOnly(),\n\n    /**\n     * Tells screenreaders whether or not this tab is selected.\n     *\n     * See http://www.w3.org/TR/wai-aria/states_and_properties#aria-selected\n     *\n     * @property aria-selected\n     * @type String\n     */\n    'aria-selected': _ember['default'].computed(function () {\n      return this.get('isSelected') + ''; // coerce to 'true' or 'false'\n    }).property('isSelected'),\n\n    /**\n     * The `role` attribute of the tab element.\n     *\n     * See http://www.w3.org/TR/wai-aria/roles#tab\n     *\n     * @property role\n     * @type String\n     * @default 'tab'\n     */\n    role: 'tab',\n\n    /**\n     * The `selected` attribute of the tab element. If the tab's `isSelected`\n     * property is `true` this will be the literal string 'selected', otherwise\n     * it will be `undefined`.\n     *\n     * @property selected\n     * @type String\n     */\n    selected: _ember['default'].computed(function () {\n      if (this.get('isSelected')) {\n        return 'selected';\n      }\n    }).property('isSelected'),\n\n    /**\n     * Makes the selected tab keyboard tabbable, and prevents tabs from getting\n     * focus when clicked with a mouse.\n     *\n     * @property tabindex\n     * @type Number\n     */\n    tabindex: _ember['default'].computed(function () {\n      if (this.get('isSelected')) {\n        return 0;\n      }\n    }).property('isSelected'),\n\n    /**\n     * Accessed as a className binding to apply the tab's `activeClass` CSS class\n     * to the element when the tab's `isSelected` property is true.\n     *\n     * @property active\n     * @type String\n     * @readOnly\n     */\n    active: _ember['default'].computed(function () {\n      if (this.get('isSelected')) {\n        return this.get('activeClass');\n      }\n    }).property('isSelected'),\n\n    /**\n     * The CSS class to apply to a tab's element when its `isSelected` property\n     * is `true`.\n     *\n     * @property activeClass\n     * @type String\n     * @default 'active'\n     */\n    activeClass: 'active',\n\n    /**\n     * The index of this tab in the `ivy-tab-list` component.\n     *\n     * @property index\n     * @type Number\n     */\n    index: _ember['default'].computed(function () {\n      return this.get('tabs').indexOf(this);\n    }).property('tabs.[]'),\n\n    /**\n     * Whether or not this tab is selected.\n     *\n     * @property isSelected\n     * @type Boolean\n     */\n    isSelected: _ember['default'].computed(function () {\n      return this.get('tabList.selectedTab') === this;\n    }).property('tabList.selectedTab'),\n\n    /**\n     * Called when the user clicks on the tab. Selects this tab.\n     *\n     * @method select\n     */\n    select: _ember['default'].on('click', 'touchEnd', function () {\n      this.get('tabList').selectTab(this);\n    }),\n\n    /**\n     * The `ivy-tab-list` component this tab belongs to.\n     *\n     * @property tabList\n     * @type IvyTabs.IvyTabListComponent\n     * @readOnly\n     */\n    tabList: _ember['default'].computed.alias('parentView').readOnly(),\n\n    /**\n     * The `ivy-tab-panel` associated with this tab.\n     *\n     * @property tabPanel\n     * @type IvyTabs.IvyTabPanelComponent\n     */\n    tabPanel: _ember['default'].computed(function () {\n      return this.get('tabPanels').objectAt(this.get('index'));\n    }).property('tabPanels.[]', 'index'),\n\n    /**\n     * The array of all `ivy-tab-panel` instances within the `ivy-tabs`\n     * component.\n     *\n     * @property tabPanels\n     * @type Array | IvyTabs.IvyTabPanelComponent\n     * @readOnly\n     */\n    tabPanels: _ember['default'].computed.alias('tabsContainer.tabPanels').readOnly(),\n\n    /**\n     * The array of all `ivy-tab` instances within the `ivy-tab-list` component.\n     *\n     * @property tabs\n     * @type Array | IvyTabs.IvyTabComponent\n     * @readOnly\n     */\n    tabs: _ember['default'].computed.alias('tabList.tabs').readOnly(),\n\n    /**\n     * The `ivy-tabs` component.\n     *\n     * @property tabsContainer\n     * @type IvyTabs.IvyTabsComponent\n     * @readOnly\n     */\n    tabsContainer: _ember['default'].computed.alias('tabList.tabsContainer').readOnly(),\n\n    _registerWithTabList: function _registerWithTabList() {\n      this.get('tabList').registerTab(this);\n    },\n\n    _unregisterWithTabList: function _unregisterWithTabList() {\n      this.get('tabList').unregisterTab(this);\n    }\n  });\n});","define('ivy-tabs/components/ivy-tabs', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  /**\n   * @module ivy-tabs\n   */\n\n  /**\n   * @class IvyTabsComponent\n   * @namespace IvyTabs\n   * @extends Ember.Component\n   */\n  exports['default'] = _ember['default'].Component.extend({\n    classNames: ['ivy-tabs'],\n\n    init: function init() {\n      this._super();\n      this._initTabPanels();\n    },\n\n    /**\n     * Set this to the index of the tab you'd like to be selected. Usually it is\n     * bound to a controller property that is used as a query parameter, but can\n     * be bound to anything.\n     *\n     * @property selected-index\n     * @type Number\n     * @default 0\n     */\n    'selected-index': 0,\n\n    /**\n     * Registers the `ivy-tab-list` instance.\n     *\n     * @method registerTabList\n     * @param {IvyTabs.IvyTabListComponent} tabList\n     */\n    registerTabList: function registerTabList(tabList) {\n      this.set('tabList', tabList);\n      _ember['default'].run.once(this, this._selectTabByIndex);\n    },\n\n    /**\n     * Adds a panel to the `tabPanels` array.\n     *\n     * @method registerTabPanel\n     * @param {IvyTabs.IvyTabPanelComponent} tabPanel\n     */\n    registerTabPanel: function registerTabPanel(tabPanel) {\n      this.get('tabPanels').pushObject(tabPanel);\n    },\n\n    /**\n     * Removes the `ivy-tab-list` component.\n     *\n     * @method unregisterTabList\n     * @param {IvyTabs.IvyTabListComponent} tabList\n     */\n    unregisterTabList: function unregisterTabList() /* tabList */{\n      this.set('tabList', null);\n    },\n\n    /**\n     * Removes a panel from the `tabPanels` array.\n     *\n     * @method unregisterTabPanel\n     * @param {IvyTabs.IvyTabPanelComponent} tabPanel\n     */\n    unregisterTabPanel: function unregisterTabPanel(tabPanel) {\n      this.get('tabPanels').removeObject(tabPanel);\n    },\n\n    _initTabPanels: function _initTabPanels() {\n      this.set('tabPanels', _ember['default'].A());\n    },\n\n    _selectTabByIndex: function _selectTabByIndex() {\n      var selectedIndex = this.get('selected-index');\n      if (_ember['default'].isNone(selectedIndex)) {\n        selectedIndex = 0;\n      }\n      this.get('tabList').selectTabByIndex(selectedIndex);\n    }\n  });\n});","define('ivy-tabs/index', ['exports', 'ivy-tabs/components/ivy-tab', 'ivy-tabs/components/ivy-tab-list', 'ivy-tabs/components/ivy-tab-panel', 'ivy-tabs/components/ivy-tabs'], function (exports, _ivyTabsComponentsIvyTab, _ivyTabsComponentsIvyTabList, _ivyTabsComponentsIvyTabPanel, _ivyTabsComponentsIvyTabs) {\n  'use strict';\n\n  exports.IvyTabComponent = _ivyTabsComponentsIvyTab['default'];\n  exports.IvyTabListComponent = _ivyTabsComponentsIvyTabList['default'];\n  exports.IvyTabPanelComponent = _ivyTabsComponentsIvyTabPanel['default'];\n  exports.IvyTabsComponent = _ivyTabsComponentsIvyTabs['default'];\n});","define('ivy-tabs', ['ivy-tabs/index', 'ember', 'exports'], function(__index__, __Ember__, __exports__) {\n  'use strict';\n  var keys = Object.keys || __Ember__['default'].keys;\n  var forEach = Array.prototype.forEach && function(array, cb) {\n    array.forEach(cb);\n  } || __Ember__['default'].EnumerableUtils.forEach;\n\n  forEach(keys(__index__), (function(key) {\n    __exports__[key] = __index__[key];\n  }));\n});\n","define('semantic-ui-ember/components/ui-accordion', ['exports', 'ember', 'semantic-ui-ember/mixins/base'], function (exports, _ember, _semanticUiEmberMixinsBase) {\n  'use strict';\n\n  var Accordion = _ember['default'].Component.extend(_semanticUiEmberMixinsBase['default'], {\n    module: 'accordion',\n    classNames: ['ui', 'accordion']\n  });\n\n  exports['default'] = Accordion;\n});","define('semantic-ui-ember/components/ui-checkbox', ['exports', 'ember', 'semantic-ui-ember/mixins/checkbox-mixin'], function (exports, _ember, _semanticUiEmberMixinsCheckboxMixin) {\n  'use strict';\n\n  exports['default'] = _ember['default'].Component.extend(_semanticUiEmberMixinsCheckboxMixin['default'], {\n    type: 'checkbox',\n    checked: false,\n\n    _onChange: function _onChange() {\n      this.set('checked', this.$('input').prop('checked'));\n    }\n  });\n});","define('semantic-ui-ember/components/ui-dropdown-item', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  exports['default'] = _ember['default'].Component.extend({\n    classNames: ['item'],\n    tagName: 'div',\n\n    initialize: _ember['default'].on('init', function () {\n      _ember['default'].run.scheduleOnce('afterRender', this, this.update_data);\n    }),\n\n    update_data: function update_data() {\n      if (this.$().data('value')) {\n        return;\n      }\n\n      this.$().data('value', this.get('content'));\n    }\n  });\n});","define('semantic-ui-ember/components/ui-dropdown', ['exports', 'ember', 'semantic-ui-ember/mixins/base', 'semantic-ui-ember/mixins/data-attributes'], function (exports, _ember, _semanticUiEmberMixinsBase, _semanticUiEmberMixinsDataAttributes) {\n  'use strict';\n\n  exports['default'] = _ember['default'].Component.extend(_semanticUiEmberMixinsBase['default'], _semanticUiEmberMixinsDataAttributes['default'], {\n    module: 'dropdown',\n    classNames: ['ui', 'dropdown'],\n    tagName: 'div',\n    value: null,\n\n    initialize: _ember['default'].on('didInsertElement', function () {\n      var value = this.get('value');\n      if (typeof value !== \"undefined\" && value !== null) {\n        this.execute('set selected', value);\n      }\n    }),\n\n    _onChange: function _onChange(value, text, $element) {\n      this._super();\n      if (value === undefined) {\n        // The initial set selected doesn't have an value. This is potentially a problem\n        // within the main Semantic library\n        //\n        // https://github.com/Semantic-Org/Semantic-UI/blob/master/src/definitions/modules/dropdown.js#L85\n        value = $element.data('value');\n      }\n      return this.set('value', value);\n    }\n  });\n});","define('semantic-ui-ember/components/ui-embed', ['exports', 'ember', 'semantic-ui-ember/mixins/base'], function (exports, _ember, _semanticUiEmberMixinsBase) {\n  'use strict';\n\n  exports['default'] = _ember['default'].Component.extend(_semanticUiEmberMixinsBase['default'], {\n    module: 'embed',\n    classNames: ['ui', 'embed'],\n    attributeBindings: ['data-id', 'data-source', 'data-placeholder', 'data-url', 'data-icon']\n  });\n});","define('semantic-ui-ember/components/ui-modal', ['exports', 'ember', 'semantic-ui-ember/mixins/base'], function (exports, _ember, _semanticUiEmberMixinsBase) {\n  'use strict';\n\n  exports['default'] = _ember['default'].Component.extend(_semanticUiEmberMixinsBase['default'], {\n    module: 'modal',\n    classNames: ['ui', 'modal'],\n    detachable: false,\n    name: null\n  });\n});","define('semantic-ui-ember/components/ui-nag', ['exports', 'ember', 'semantic-ui-ember/mixins/base'], function (exports, _ember, _semanticUiEmberMixinsBase) {\n  'use strict';\n\n  exports['default'] = _ember['default'].Component.extend(_semanticUiEmberMixinsBase['default'], {\n    module: 'nag',\n    classNames: ['ui', 'nag'],\n    attributeBindings: ['storageMethod', 'key', 'expires', 'domain', 'path', 'value'],\n\n    init: function init() {\n      this._super();\n      this.execute('show');\n    }\n  });\n});","define('semantic-ui-ember/components/ui-popup', ['exports', 'ember', 'semantic-ui-ember/mixins/base'], function (exports, _ember, _semanticUiEmberMixinsBase) {\n  'use strict';\n\n  exports['default'] = _ember['default'].Component.extend(_semanticUiEmberMixinsBase['default'], {\n    module: 'popup',\n    attributeBindings: ['content:data-content'],\n\n    contentChanges: _ember['default'].observer('content', function () {\n      this.didInsertElement();\n    })\n  });\n});","define('semantic-ui-ember/components/ui-progress', ['exports', 'ember', 'semantic-ui-ember/mixins/base'], function (exports, _ember, _semanticUiEmberMixinsBase) {\n  'use strict';\n\n  var Progress = _ember['default'].Component.extend(_semanticUiEmberMixinsBase['default'], {\n    module: 'progress',\n    classNames: ['ui', 'progress'],\n    attributeBindings: ['percent', 'total', 'value']\n  });\n\n  exports['default'] = Progress;\n});","define('semantic-ui-ember/components/ui-radio', ['exports', 'ember', 'semantic-ui-ember/mixins/checkbox-mixin'], function (exports, _ember, _semanticUiEmberMixinsCheckboxMixin) {\n  'use strict';\n\n  exports['default'] = _ember['default'].Component.extend(_semanticUiEmberMixinsCheckboxMixin['default'], {\n    type: 'radio',\n    classNames: ['radio'],\n    name: 'default',\n\n    init: function init() {\n      this._super();\n\n      if (!(this.get('name') && this.get('name') !== 'default')) {\n        _ember['default'].Logger.warn('Name was not passed into semantic radio component');\n      }\n    },\n\n    _onChange: function _onChange() {\n      this.set('current', this.get('value'));\n    },\n\n    checked: _ember['default'].computed('current', 'value', function () {\n      return this.get('current') === this.get('value');\n    })\n  });\n});","define('semantic-ui-ember/components/ui-rating', ['exports', 'ember', 'semantic-ui-ember/mixins/base'], function (exports, _ember, _semanticUiEmberMixinsBase) {\n  'use strict';\n\n  var Rating = _ember['default'].Component.extend(_semanticUiEmberMixinsBase['default'], {\n    module: 'rating',\n    classNames: ['ui', 'rating'],\n\n    init: function init() {\n      this._super();\n\n      if (!this.get('initialRating') && this.get('rating')) {\n        this.set('initialRating', this.get('rating'));\n      }\n    }\n  });\n\n  exports['default'] = Rating;\n});","define('semantic-ui-ember/components/ui-search', ['exports', 'ember', 'semantic-ui-ember/mixins/base'], function (exports, _ember, _semanticUiEmberMixinsBase) {\n  'use strict';\n\n  exports['default'] = _ember['default'].Component.extend(_semanticUiEmberMixinsBase['default'], {\n    module: 'search',\n    classNames: ['ui', 'search'],\n\n    /**\n      Proxying all the attributes to apiSettings\n    */\n    apiSettings: _ember['default'].computed.alias('attrs')\n  });\n});","define('semantic-ui-ember/components/ui-shape', ['exports', 'ember', 'semantic-ui-ember/mixins/base'], function (exports, _ember, _semanticUiEmberMixinsBase) {\n  'use strict';\n\n  exports['default'] = _ember['default'].Component.extend(_semanticUiEmberMixinsBase['default'], {\n    module: 'shape',\n    classNames: ['ui', 'shape']\n  });\n});","define('semantic-ui-ember/components/ui-sidebar', ['exports', 'ember', 'semantic-ui-ember/mixins/base'], function (exports, _ember, _semanticUiEmberMixinsBase) {\n  'use strict';\n\n  exports['default'] = _ember['default'].Component.extend(_semanticUiEmberMixinsBase['default'], {\n    module: 'sidebar',\n    classNames: ['ui', 'sidebar']\n  });\n});","define('semantic-ui-ember/components/ui-sticky', ['exports', 'ember', 'semantic-ui-ember/mixins/base'], function (exports, _ember, _semanticUiEmberMixinsBase) {\n  'use strict';\n\n  exports['default'] = _ember['default'].Component.extend(_semanticUiEmberMixinsBase['default'], {\n    module: 'sticky',\n    classNames: ['ui', 'sticky']\n  });\n});","define('semantic-ui-ember/mixins/base', ['exports', 'ember', 'semantic-ui-ember/semantic'], function (exports, _ember, _semanticUiEmberSemantic) {\n  'use strict';\n\n  _semanticUiEmberSemantic['default'].BaseMixin = _ember['default'].Mixin.create({\n    init: function init() {\n      this._super();\n\n      if (!this.get('module')) {\n        return _ember['default'].Logger.error('Module was not declared on semantic extended type');\n      }\n    },\n\n    settings: function settings(module) {\n      var component, custom, key, prop, value;\n\n      component = window.$.fn[module];\n      if (!component) {\n        throw \"Unable to find semantic module: \" + module;\n      }\n\n      custom = {\n        debug: _semanticUiEmberSemantic['default'].UI_DEBUG,\n        performance: _semanticUiEmberSemantic['default'].UI_PERFORMANCE,\n        verbose: _semanticUiEmberSemantic['default'].UI_VERBOSE\n      };\n\n      for (key in component.settings) {\n        prop = component.settings[key];\n        if (window.$.inArray(key, _semanticUiEmberSemantic['default'].BaseMixin.DEBUG) >= 0) {\n          continue;\n        }\n\n        if (window.$.inArray(key, _semanticUiEmberSemantic['default'].BaseMixin.STANDARD) >= 0) {\n          continue;\n        }\n\n        if (typeof prop === 'function' && typeof (this.get(key) || this.get('_' + key)) !== 'function') {\n          continue;\n        }\n\n        if (window.$.inArray(key, _semanticUiEmberSemantic['default'].BaseMixin.EMBER) >= 0) {\n          value = this.get('ui_' + key);\n        } else {\n          if (typeof this.get(key) !== 'undefined') {\n            value = this.get(key);\n          } else {\n            value = this.get('_' + key);\n          }\n        }\n\n        if (value != null) {\n          if (typeof value === 'function') {\n            custom[key] = _ember['default'].run.bind(this, this.updateFunctionWithParameters(key, value));\n          } else {\n            custom[key] = value;\n          }\n        }\n      }\n\n      return custom;\n    },\n\n    updateProperty: function updateProperty(property) {\n      return function () {\n        this.execute('set ' + property, this.get(property));\n      };\n    },\n\n    updateFunctionWithParameters: function updateFunctionWithParameters(key, fn) {\n      return function () {\n        var args = [].splice.call(arguments, 0);\n        var internal = this.get('_' + key);\n\n        if (internal) {\n          internal.apply(this, args);\n        }\n\n        if (internal !== fn) {\n          return fn.apply(this, [this].concat(args));\n        }\n\n        return true;\n      };\n    },\n\n    didInsertElement: function didInsertElement() {\n      this.$()[this.get(\"module\")](this.settings(this.get(\"module\")));\n\n      var _this = this;\n      var properties = this.execute('set');\n      var property;\n\n      for (property in properties) {\n        if (!properties.hasOwnProperty(property)) {\n          continue;\n        }\n\n        _this.addObserver(property, _this, _this.updateProperty(property));\n      }\n    },\n\n    willDestroyElement: function willDestroyElement() {\n      var name, selector;\n      if ((selector = this.$()) != null) {\n        if (typeof selector[name = this.get(\"module\")] === \"function\") {\n          return selector[name]('destroy');\n        }\n      }\n    },\n\n    execute: function execute() {\n      var selector, module;\n      if ((selector = this.$()) != null) {\n        if ((module = selector[this.get('module')]) != null) {\n          return module.apply(this.$(), arguments);\n        }\n      }\n    }\n  });\n\n  // Static properties to ignore\n  _semanticUiEmberSemantic['default'].BaseMixin.DEBUG = ['debug', 'performance', 'verbose'];\n  _semanticUiEmberSemantic['default'].BaseMixin.STANDARD = ['name', 'namespace', 'className', 'error', 'metadata', 'selector'];\n  _semanticUiEmberSemantic['default'].BaseMixin.EMBER = ['context', 'on', 'template', 'execute'];\n\n  exports['default'] = _semanticUiEmberSemantic['default'].BaseMixin;\n});","define('semantic-ui-ember/mixins/checkbox-mixin', ['exports', 'ember', 'semantic-ui-ember/mixins/base'], function (exports, _ember, _semanticUiEmberMixinsBase) {\n  'use strict';\n\n  /*\n   * Checkbox Component Mixin\n   */\n  var CheckboxMixin = _ember['default'].Mixin.create(_semanticUiEmberMixinsBase['default'], {\n    module: 'checkbox',\n    classNames: ['ui', 'checkbox'],\n\n    didInsertElement: function didInsertElement() {\n      if (this.get(\"disabled\")) {\n        return;\n      }\n      this._super();\n    },\n\n    willDestroyElement: function willDestroyElement() {\n      if (this.get(\"disabled\")) {\n        return;\n      }\n      this._super();\n    }\n  });\n\n  exports['default'] = CheckboxMixin;\n});","define('semantic-ui-ember/mixins/data-attributes', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  exports['default'] = _ember['default'].Mixin.create({\n    attributeBindings: ['data-test']\n  });\n});","define('semantic-ui-ember/semantic', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  var Semantic = _ember['default'].Namespace.create({\n    UI_DEBUG: false,\n    UI_PERFORMANCE: false,\n    UI_VERBOSE: false\n  });\n\n  exports['default'] = Semantic;\n});","define('semantic-ui-ember', ['semantic-ui-ember/index', 'ember', 'exports'], function(__index__, __Ember__, __exports__) {\n  'use strict';\n  var keys = Object.keys || __Ember__['default'].keys;\n  var forEach = Array.prototype.forEach && function(array, cb) {\n    array.forEach(cb);\n  } || __Ember__['default'].EnumerableUtils.forEach;\n\n  forEach(keys(__index__), (function(key) {\n    __exports__[key] = __index__[key];\n  }));\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrtnFA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChzBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"addons.js"}